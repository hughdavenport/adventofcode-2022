function read_lines(filename: String) throws -> [String] {
    mut ret: [String] = []
    mut file = File::open_for_reading(filename)
    mut builder = StringBuilder::create()
    for b in file.read_all() {
        if b == '\n' as! u8 {
            ret.push(builder.to_string())
            builder = StringBuilder::create()
        } else {
            builder.append(b)
        }
    }
    if not builder.is_empty() {
        ret.push(builder.to_string())
    }
    return ret
}

function main(args: [String]) {
//    if args.size() <= 1 {
//        eprintln("usage: {} <input file>", args[0])
//        return 1
//    }

    mut max1: i32 = 0
    mut max2: i32 = 0
    mut max3: i32 = 0
    mut current: i32 = 0

    for line in read_lines(filename: "input") {
        if line == "" {
            if current > max1 {
                max3 = max2
                max2 = max1
                max1 = current
            } else if current > max2 {
                max3 = max2
                max2 = current
            } else if current > max3 {
                max3 = current
            }
            current = 0
            continue
        }
        current += line.to_int()!
    }
    if current > max1 {
        max3 = max2
        max2 = max1
        max1 = current
    } else if current > max2 {
        max3 = max2
        max2 = current
    } else if current > max3 {
        max3 = current
    }

    println("Part 1: {}", max1)
    println("Part 2: {}", max1 + max2 + max3)
}
